<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="include\edlpch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="include\lua_wrapper.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="include\edlpch.hpp" />
    <ClInclude Include="include\lua_wrapper.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{fa60ae1d-599b-4fe8-ad51-76e910e62630}</ProjectGuid>
    <RootNamespace>ExternalDynamicLinkLibrary</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>obj\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>obj\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>obj\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>obj\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\include;</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>edlpch.hpp</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\dll\$(Platform)</AdditionalLibraryDirectories>
      <AdditionalDependencies>lua5.1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>
      </Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>REM 遅延環境変数処理
setlocal enabledelayedexpansion

REM バッチパス
set BAT_PATH=$(SolutionDir)BuildEventSubRoutine.bat

REM 探索ディレクトリ
set READ_DIR=$(SolutionDir)

REM 対象ファイル
set COPY_TARGET=$(TargetDir)$(TargetFileName)

REM =================================================================================
REM todo:出力ファイルにこのプロジェクトの出力しか考慮されてないので使用している他のdllは対象外(例えばXInput.dllとか)
REM          ネイティブプラグインだから考えてなかったけど、依存関係が生まれるようなら依存ライブラリも全部コピーするようにfixしたほうがいいかも
REM =================================================================================

REM 呼び出し
call "!BAT_PATH!" "!COPY_TARGET!" "!READ_DIR!"

REM 遅延環境変数終了
endlocal</Command>
      <Message>*.iniを読み込んで出力ファイルをコピーする</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\include;</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>edlpch.hpp</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\dll\$(Platform)</AdditionalLibraryDirectories>
      <AdditionalDependencies>lua5.1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>
      </Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>REM 遅延環境変数処理
setlocal enabledelayedexpansion

REM バッチパス
set BAT_PATH=$(SolutionDir)BuildEventSubRoutine.bat

REM 探索ディレクトリ
set READ_DIR=$(SolutionDir)

REM 対象ファイル
set COPY_TARGET=$(TargetDir)$(TargetFileName)

REM =================================================================================
REM todo:出力ファイルにこのプロジェクトの出力しか考慮されてないので使用している他のdllは対象外(例えばXInput.dllとか)
REM          ネイティブプラグインだから考えてなかったけど、依存関係が生まれるようなら依存ライブラリも全部コピーするようにfixしたほうがいいかも
REM =================================================================================

REM 呼び出し
call "!BAT_PATH!" "!COPY_TARGET!" "!READ_DIR!"

REM 遅延環境変数終了
endlocal</Command>
      <Message>*.iniを読み込んで出力ファイルをコピーする</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\include;</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>edlpch.hpp</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\dll\$(Platform)</AdditionalLibraryDirectories>
      <AdditionalDependencies>lua51.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>
      </Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>REM 遅延環境変数処理
setlocal enabledelayedexpansion

REM バッチパス
set BAT_PATH=$(SolutionDir)BuildEventSubRoutine.bat

REM 探索ディレクトリ
set READ_DIR=$(SolutionDir)

REM 対象ファイル
set COPY_TARGET=$(TargetDir)$(TargetFileName)

REM =================================================================================
REM todo:出力ファイルにこのプロジェクトの出力しか考慮されてないので使用している他のdllは対象外(例えばXInput.dllとか)
REM          ネイティブプラグインだから考えてなかったけど、依存関係が生まれるようなら依存ライブラリも全部コピーするようにfixしたほうがいいかも
REM =================================================================================

REM 呼び出し
call "!BAT_PATH!" "!COPY_TARGET!" "!READ_DIR!"

REM 遅延環境変数終了
endlocal</Command>
      <Message>*.iniを読み込んで出力ファイルをコピーする</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\include;</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>edlpch.hpp</PrecompiledHeaderFile>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)\ExternalDynamicLinkLibrary\dll\$(Platform)</AdditionalLibraryDirectories>
      <AdditionalDependencies>lua51.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PreBuildEvent>
      <Message>
      </Message>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>REM 遅延環境変数処理
setlocal enabledelayedexpansion

REM バッチパス
set BAT_PATH=$(SolutionDir)BuildEventSubRoutine.bat

REM 探索ディレクトリ
set READ_DIR=$(SolutionDir)

REM 対象ファイル
set COPY_TARGET=$(TargetDir)$(TargetFileName)

REM =================================================================================
REM todo:出力ファイルにこのプロジェクトの出力しか考慮されてないので使用している他のdllは対象外(例えばXInput.dllとか)
REM          ネイティブプラグインだから考えてなかったけど、依存関係が生まれるようなら依存ライブラリも全部コピーするようにfixしたほうがいいかも
REM =================================================================================

REM 呼び出し
call "!BAT_PATH!" "!COPY_TARGET!" "!READ_DIR!"

REM 遅延環境変数終了
endlocal</Command>
      <Message>*.iniを読み込んで出力ファイルをコピーする</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>